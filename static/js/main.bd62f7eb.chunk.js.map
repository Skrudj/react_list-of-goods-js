{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_NAME","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","preparedGoods","goods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAkB,OAClBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCE,EAAa,YAAOC,GAqB1B,OAnBIL,GACFI,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFE,EAAcO,UAGTP,EAMeQ,CAAiBf,EACrC,CAAEG,YAAWE,eAEf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAcL,EAC1B,YAAaK,IAAcL,IAE7BqB,QAAS,kBAAMf,EAAaN,IAN9B,iCAWA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcJ,EAC1B,YAAaI,IAAcJ,IAE7BoB,QAAS,kBAAMf,EAAaL,IAN9B,4BAWA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAab,EACb,YAAaA,IAEfc,QAAS,kBAAMb,GAAeD,IANhC,qBAWCF,GAAaE,EACZ,mCACE,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAa,IACbE,GAAc,IALlB,qBAYF,MAIJ,6BACGC,EAAca,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAAoBA,aCzG9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd62f7eb.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const preparedGoods = getPreparedGoods(goodsFromServer,\n    { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_NAME,\n            'is-active': sortField === SORT_FIELD_NAME,\n          })}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n            'is-active': sortField === SORT_FIELD_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n            'is-active': isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReversed ? (\n          <>\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField('');\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          </>\n        ) : (\n          ''\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}